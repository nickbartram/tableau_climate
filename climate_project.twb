<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='co2_df' inline='true' name='federated.0xxht900xbsdwg1f9dqd910u8x42' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='co2_df' name='textscan.1soj0rn1cdhcwa13b6qdl1xtyp5l'>
            <connection class='textscan' directory='C:/Users/nbart.DESKTOP-3OF7M8N/Desktop/Data Practice/Portfolio/climate_agriculture_impact/Output' filename='co2_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1soj0rn1cdhcwa13b6qdl1xtyp5l' name='co2_df.csv' table='[co2_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='iso_code' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
            <column datatype='real' name='gdp' ordinal='5' />
            <column datatype='real' name='co2' ordinal='6' />
            <column datatype='real' name='co2_growth_prct' ordinal='7' />
            <column datatype='real' name='co2_per_capita' ordinal='8' />
            <column datatype='real' name='co2_per_gdp' ordinal='9' />
            <column datatype='real' name='total_ghg' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>gdp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_gdp]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>co2_per_gdp</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_ghg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_ghg]</local-name>
            <parent-name>[co2_df.csv]</parent-name>
            <remote-alias>total_ghg</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='co2_df.csv' datatype='table' name='[__tableau_internal_object_id__].[co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 Per Gdp' datatype='real' name='[co2_per_gdp]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Ghg' datatype='real' name='[total_ghg]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NBART~1.DES/AppData/Local/Temp/TableauTemp/#TableauTemp_04yu0qw1nht8k318638y50da1u0y.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/29/2025 09:04:28 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>co2_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>co2_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>2</ordinal>
              <family>co2_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>co2_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>116</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>4</ordinal>
              <family>co2_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp</remote-alias>
              <ordinal>5</ordinal>
              <family>co2_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>6</ordinal>
              <family>co2_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>7</ordinal>
              <family>co2_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>8</ordinal>
              <family>co2_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_gdp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_gdp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_gdp</remote-alias>
              <ordinal>9</ordinal>
              <family>co2_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>212</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_ghg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_ghg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_ghg</remote-alias>
              <ordinal>10</ordinal>
              <family>co2_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='co2_df.csv' id='co2_df.csv_1F55F1D59A18424196BB00BFF2C8D78D'>
            <properties context=''>
              <relation connection='textscan.1soj0rn1cdhcwa13b6qdl1xtyp5l' name='co2_df.csv' table='[co2_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='integer' name='year' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='real' name='gdp' ordinal='5' />
                  <column datatype='real' name='co2' ordinal='6' />
                  <column datatype='real' name='co2_growth_prct' ordinal='7' />
                  <column datatype='real' name='co2_per_capita' ordinal='8' />
                  <column datatype='real' name='co2_per_gdp' ordinal='9' />
                  <column datatype='real' name='total_ghg' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='rainfall_df' inline='true' name='federated.1lmeh78147sge31cc3z7s0x934yw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='rainfall_df' name='textscan.081humv09c5jsr1drqk2r0ph3ix8'>
            <connection class='textscan' directory='C:/Users/nbart.DESKTOP-3OF7M8N/Desktop/Data Practice/Portfolio/climate_agriculture_impact/Output' filename='rainfall_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.081humv09c5jsr1drqk2r0ph3ix8' name='rainfall_df.csv' table='[rainfall_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='iso_code' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='real' name='total_precip_mm' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[rainfall_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[rainfall_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[rainfall_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[rainfall_df.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[rainfall_df.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_precip_mm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_precip_mm]</local-name>
            <parent-name>[rainfall_df.csv]</parent-name>
            <remote-alias>total_precip_mm</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='rainfall_df.csv' datatype='table' name='[__tableau_internal_object_id__].[rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Total Precip Mm' datatype='real' name='[total_precip_mm]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NBART~1.DES/AppData/Local/Temp/TableauTemp/#TableauTemp_0go127l167gss01g6j03v1fss6n0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/30/2025 03:02:34 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>rainfall_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>rainfall_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>2</ordinal>
              <family>rainfall_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>rainfall_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>116</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_precip_mm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_precip_mm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_precip_mm</remote-alias>
              <ordinal>4</ordinal>
              <family>rainfall_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='rainfall_df.csv' id='rainfall_df.csv_E7CA03B61E6249B481B6A632A9BF5323'>
            <properties context=''>
              <relation connection='textscan.081humv09c5jsr1drqk2r0ph3ix8' name='rainfall_df.csv' table='[rainfall_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='integer' name='year' ordinal='3' />
                  <column datatype='real' name='total_precip_mm' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='diet_persons_df' inline='true' name='federated.0lh4jj10vj6bfr1g4r60y1c35lam' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='diet_persons_df' name='textscan.1pwvvqe0ukep9v18ku6nd1grme3h'>
            <connection class='textscan' directory='C:/Users/nbart.DESKTOP-3OF7M8N/Desktop/Data Practice/Portfolio/climate_agriculture_impact/Output' filename='diet_persons_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1pwvvqe0ukep9v18ku6nd1grme3h' name='diet_persons_df.csv' table='[diet_persons_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='iso_code' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='string' name='unit_of_measure' ordinal='4' />
            <column datatype='real' name='total_million' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_of_measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit_of_measure]</local-name>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias>unit_of_measure</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_million]</local-name>
            <parent-name>[diet_persons_df.csv]</parent-name>
            <remote-alias>total_million</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='diet_persons_df.csv' datatype='table' name='[__tableau_internal_object_id__].[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Total Million' datatype='real' name='[total_million]' role='measure' type='quantitative' />
      <column caption='Unit Of Measure' datatype='string' name='[unit_of_measure]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NBART~1.DES/AppData/Local/Temp/TableauTemp/#TableauTemp_0m69yzw118sthg11urqd901m490i.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/30/2025 03:02:53 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>diet_persons_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>diet_persons_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>2</ordinal>
              <family>diet_persons_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>diet_persons_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unit_of_measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[unit_of_measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>unit_of_measure</remote-alias>
              <ordinal>4</ordinal>
              <family>diet_persons_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_million</remote-alias>
              <ordinal>5</ordinal>
              <family>diet_persons_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='diet_persons_df.csv' id='diet_persons_df.csv_EB07410A0DCA440784AA7052E5AE7D44'>
            <properties context=''>
              <relation connection='textscan.1pwvvqe0ukep9v18ku6nd1grme3h' name='diet_persons_df.csv' table='[diet_persons_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='integer' name='year' ordinal='3' />
                  <column datatype='string' name='unit_of_measure' ordinal='4' />
                  <column datatype='real' name='total_million' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='diet_percentage_df' inline='true' name='federated.0zvkjn219k9npp12yzzcq19k60pw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='diet_percentage_df' name='textscan.0z5mmwa1fkmhb619sil4j11vc0lc'>
            <connection class='textscan' directory='C:/Users/nbart.DESKTOP-3OF7M8N/Desktop/Data Practice/Portfolio/climate_agriculture_impact/Output' filename='diet_percentage_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0z5mmwa1fkmhb619sil4j11vc0lc' name='diet_percentage_df.csv' table='[diet_percentage_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='iso_code' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='string' name='unit_of_measure' ordinal='4' />
            <column datatype='real' name='percentage' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_of_measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit_of_measure]</local-name>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias>unit_of_measure</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[diet_percentage_df.csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Able to Afford' datatype='real' name='[Calculation_1408219367528824832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 - [percentage]' />
      </column>
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='diet_percentage_df.csv' datatype='table' name='[__tableau_internal_object_id__].[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative' />
      <column caption='Unit Of Measure' datatype='string' name='[unit_of_measure]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1408219367528824832]' derivation='Sum' name='[sum:Calculation_1408219367528824832:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NBART~1.DES/AppData/Local/Temp/TableauTemp/#TableauTemp_1g772we04k2zwa0zlbv5y1wq1kgb.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/30/2025 03:02:56 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>diet_percentage_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>diet_percentage_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>2</ordinal>
              <family>diet_percentage_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>diet_percentage_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unit_of_measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[unit_of_measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>unit_of_measure</remote-alias>
              <ordinal>4</ordinal>
              <family>diet_percentage_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage</remote-alias>
              <ordinal>5</ordinal>
              <family>diet_percentage_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:Calculation_1408219367528824832:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:percentage:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw].[__tableau_internal_object_id__].[cnt:diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='diet_percentage_df.csv' id='diet_percentage_df.csv_0DB3810E3FE74BB28AD3E2211D37E341'>
            <properties context=''>
              <relation connection='textscan.0z5mmwa1fkmhb619sil4j11vc0lc' name='diet_percentage_df.csv' table='[diet_percentage_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='integer' name='year' ordinal='3' />
                  <column datatype='string' name='unit_of_measure' ordinal='4' />
                  <column datatype='real' name='percentage' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='NA_crops_df' inline='true' name='federated.1txpi801ougt8s12r6ywb06c5102' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NA_crops_df' name='textscan.0vp5h0t1mcamou13jz0cp12fly5r'>
            <connection class='textscan' directory='C:/Users/nbart.DESKTOP-3OF7M8N/Desktop/Data Practice/Portfolio/climate_agriculture_impact/Output' filename='NA_crops_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vp5h0t1mcamou13jz0cp12fly5r' name='NA_crops_df.csv' table='[NA_crops_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='iso_code' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='string' name='crop' ordinal='4' />
            <column datatype='real' name='production_mt' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crop</remote-name>
            <remote-type>129</remote-type>
            <local-name>[crop]</local-name>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias>crop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_mt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[production_mt]</local-name>
            <parent-name>[NA_crops_df.csv]</parent-name>
            <remote-alias>production_mt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NA_crops_df.csv' datatype='table' name='[__tableau_internal_object_id__].[NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Crop' datatype='string' name='[crop]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Production Mt' datatype='real' name='[production_mt]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[crop]' derivation='None' name='[none:crop:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NBART~1.DES/AppData/Local/Temp/TableauTemp/#TableauTemp_1jcfsp40jdz2a21bpkj2z1ruy5zh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/30/2025 06:39:27 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>NA_crops_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>464</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>NA_crops_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>2</ordinal>
              <family>NA_crops_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>3</ordinal>
              <family>NA_crops_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>116</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>crop</remote-name>
              <remote-type>129</remote-type>
              <local-name>[crop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>crop</remote-alias>
              <ordinal>4</ordinal>
              <family>NA_crops_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>production_mt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[production_mt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>production_mt</remote-alias>
              <ordinal>5</ordinal>
              <family>NA_crops_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>463</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:crop:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;corn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wheat&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='NA_crops_df.csv' id='NA_crops_df.csv_43B954E62B4A468BB87BA19D1CE62D7C'>
            <properties context=''>
              <relation connection='textscan.0vp5h0t1mcamou13jz0cp12fly5r' name='NA_crops_df.csv' table='[NA_crops_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='integer' name='year' ordinal='3' />
                  <column datatype='string' name='crop' ordinal='4' />
                  <column datatype='real' name='production_mt' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2023 CO2 Emssions'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' included-values='in-range'>
            <min>2023</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DCFD5EBA-4643-4089-9D4B-95ECD56462C2}' />
    </worksheet>
    <worksheet name='CO2 Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' included-values='in-range'>
            <min>2023</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxht900xbsdwg1f9dqd910u8x42].[Longitude (generated)]' field-type='quantitative' max='-2496602.3984164316' min='-20367700.499611169' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xxht900xbsdwg1f9dqd910u8x42].[Latitude (generated)]' field-type='quantitative' max='10580252.564436097' min='1908375.2452352853' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]' />
              <lod column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
              <geometry column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[Latitude (generated)]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4B0184FA-1DC6-4592-869F-DE1B08147FC0}' />
    </worksheet>
    <worksheet name='CO2 Per Capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2_per_capita:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{FF03FFE5-27FA-4610-90FC-D56D345B4308}' />
    </worksheet>
    <worksheet name='CO2 Per GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Co2 Per Gdp' datatype='real' name='[co2_per_gdp]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_gdp]' derivation='Sum' name='[sum:co2_per_gdp:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2_per_gdp:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{3A88E8C1-6ED6-4EF1-9819-D521636A7C3A}' />
    </worksheet>
    <worksheet name='CO2 Per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{F240A6E9-7649-450A-ACAD-C879A5445441}' />
    </worksheet>
    <worksheet name='CO2 Per Year (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' included-values='in-range'>
            <min>1908</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{ECD97718-F05E-452E-B52F-E2E6927504B4}' />
    </worksheet>
    <worksheet name='National GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:gdp:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{0E3336BD-6C98-4108-9B5B-BEDA1919A755}' />
    </worksheet>
    <worksheet name='North American Crop Production'>
      <table>
        <view>
          <datasources>
            <datasource caption='NA_crops_df' name='federated.1txpi801ougt8s12r6ywb06c5102' />
          </datasources>
          <datasource-dependencies datasource='federated.1txpi801ougt8s12r6ywb06c5102'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Crop' datatype='string' name='[crop]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[crop]' derivation='None' name='[none:crop:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Production Mt' datatype='real' name='[production_mt]' role='measure' type='quantitative' />
            <column-instance column='[production_mt]' derivation='Sum' name='[sum:production_mt:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1txpi801ougt8s12r6ywb06c5102].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1txpi801ougt8s12r6ywb06c5102].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1txpi801ougt8s12r6ywb06c5102].[none:crop:nk]'>
            <groupfilter function='level-members' level='[none:crop:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1txpi801ougt8s12r6ywb06c5102].[:Measure Names]</column>
            <column>[federated.1txpi801ougt8s12r6ywb06c5102].[none:country:nk]</column>
            <column>[federated.1txpi801ougt8s12r6ywb06c5102].[none:crop:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1txpi801ougt8s12r6ywb06c5102].[none:crop:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1txpi801ougt8s12r6ywb06c5102].[sum:production_mt:qk]</rows>
        <cols>[federated.1txpi801ougt8s12r6ywb06c5102].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{FB3EC018-9E75-4D88-A76D-018AB53E7721}' />
    </worksheet>
    <worksheet name='North American Precipitation'>
      <table>
        <view>
          <datasources>
            <datasource caption='rainfall_df' name='federated.1lmeh78147sge31cc3z7s0x934yw' />
          </datasources>
          <datasource-dependencies datasource='federated.1lmeh78147sge31cc3z7s0x934yw'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_precip_mm]' derivation='Sum' name='[sum:total_precip_mm:qk]' pivot='key' type='quantitative' />
            <column caption='Total Precip Mm' datatype='real' name='[total_precip_mm]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lmeh78147sge31cc3z7s0x934yw].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lmeh78147sge31cc3z7s0x934yw].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lmeh78147sge31cc3z7s0x934yw].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lmeh78147sge31cc3z7s0x934yw].[sum:total_precip_mm:qk]</rows>
        <cols>[federated.1lmeh78147sge31cc3z7s0x934yw].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{085E9AC7-84B4-4B58-88FF-41E8C3EFA71C}' />
    </worksheet>
    <worksheet name='Percentage of People Unable to Afford a Healthy Diet'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='diet_percentage_df' name='federated.0zvkjn219k9npp12yzzcq19k60pw' />
          </datasources>
          <datasource-dependencies datasource='federated.0zvkjn219k9npp12yzzcq19k60pw'>
            <column caption='Able to Afford' datatype='real' name='[Calculation_1408219367528824832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 - [percentage]' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1408219367528824832]' derivation='Sum' name='[sum:Calculation_1408219367528824832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:Calculation_1408219367528824832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:percentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:year:qk]' included-values='in-range-or-null'>
            <min>2023</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]</column>
            <column>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:year:qk]</column>
            <column>[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]' />
              <wedge-size column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[Multiple Values]' />
              <text column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{607E7E09-DE3F-4637-91BF-47C367A6BAB4}' />
    </worksheet>
    <worksheet name='Percentage of People Unable to Afford a Healthy Diet (Line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='diet_percentage_df' name='federated.0zvkjn219k9npp12yzzcq19k60pw' />
          </datasources>
          <datasource-dependencies datasource='federated.0zvkjn219k9npp12yzzcq19k60pw'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:percentage:qk]</rows>
        <cols>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{F8B0E7D1-9927-4192-B77F-1DDAE7F45B01}' />
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:population:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{0C938C1D-56EB-4F3F-9BAD-60F1FF2998A2}' />
    </worksheet>
    <worksheet name='Total Greenhouse Gas Emissions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_ghg]' derivation='Sum' name='[sum:total_ghg:qk]' pivot='key' type='quantitative' />
            <column caption='Total Ghg' datatype='real' name='[total_ghg]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e1575967' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:total_ghg:qk]</rows>
        <cols>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{06EBCACE-C48D-46A7-84CB-B7C6D4C810F1}' />
    </worksheet>
    <worksheet name='Total People Unable to Afford a Healthy Diet'>
      <table>
        <view>
          <datasources>
            <datasource caption='diet_persons_df' name='federated.0lh4jj10vj6bfr1g4r60y1c35lam' />
          </datasources>
          <datasource-dependencies datasource='federated.0lh4jj10vj6bfr1g4r60y1c35lam'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_million]' derivation='Sum' name='[sum:total_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Million' datatype='real' name='[total_million]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' />
              <lod column='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[sum:total_million:qk]</rows>
        <cols>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E2F018CA-47C0-43D4-B4D4-619D140D679E}' />
    </worksheet>
    <worksheet name='Total People Unable to Afford a Healthy Diet (Line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='diet_persons_df' name='federated.0lh4jj10vj6bfr1g4r60y1c35lam' />
          </datasources>
          <datasource-dependencies datasource='federated.0lh4jj10vj6bfr1g4r60y1c35lam'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_million]' derivation='Sum' name='[sum:total_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Million' datatype='real' name='[total_million]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[sum:total_million:qk]</rows>
        <cols>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{60180273-C6C7-400B-AA10-8EABB4497E97}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='co2_df' name='federated.0xxht900xbsdwg1f9dqd910u8x42' />
        <datasource caption='diet_percentage_df' name='federated.0zvkjn219k9npp12yzzcq19k60pw' />
      </datasources>
      <datasource-dependencies datasource='federated.0xxht900xbsdwg1f9dqd910u8x42'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0zvkjn219k9npp12yzzcq19k60pw'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='11' param='horz' type-v2='layout-flow' w='99064' x='468' y='926'>
            <zone h='98148' id='9' type-v2='layout-basic' w='89702' x='468' y='926'>
              <zone h='49074' id='7' name='CO2 Map' w='37098' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='18' name='2023 CO2 Emssions' w='30179' x='37566' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='20' name='National GDP' w='44851' x='468' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='22' name='Percentage of People Unable to Afford a Healthy Diet' w='44851' x='45319' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='25' name='CO2 Per Year (2)' w='22425' x='67745' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98148' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='926'>
              <zone h='7986' id='12' name='CO2 Map' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7523' id='13' name='CO2 Map' pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]' type-v2='color' w='9362' x='90170' y='8912'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7639' id='19' name='2023 CO2 Emssions' pane-specification-id='1' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type-v2='color' w='9362' x='90170' y='16435'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10301' id='21' name='National GDP' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type-v2='filter' w='9362' x='90170' y='24074'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10301' id='23' name='Percentage of People Unable to Afford a Healthy Diet' param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]' type-v2='filter' w='9362' x='90170' y='34375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7639' id='24' name='Percentage of People Unable to Afford a Healthy Diet' pane-specification-id='0' param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]' type-v2='color' w='9362' x='90170' y='44676'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7986' id='26' name='CO2 Per Year (2)' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='52315'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10301' id='27' name='CO2 Per Year (2)' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type-v2='filter' w='9362' x='90170' y='60301'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='28' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone h='10301' id='21' mode='checkdropdown' name='National GDP' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type-v2='filter' w='9362' x='90170' y='24074'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='20' is-fixed='true' name='National GDP' w='44851' x='468' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10301' id='23' mode='checkdropdown' name='Percentage of People Unable to Afford a Healthy Diet' param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]' type-v2='filter' w='9362' x='90170' y='34375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='22' is-fixed='true' name='Percentage of People Unable to Afford a Healthy Diet' w='44851' x='45319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7639' id='24' name='Percentage of People Unable to Afford a Healthy Diet' pane-specification-id='0' param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]' type-v2='color' w='9362' x='90170' y='44676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7986' id='12' name='CO2 Map' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='7' is-fixed='true' name='CO2 Map' w='37098' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7523' id='13' name='CO2 Map' pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]' type-v2='color' w='9362' x='90170' y='8912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='18' is-fixed='true' name='2023 CO2 Emssions' w='30179' x='37566' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7639' id='19' name='2023 CO2 Emssions' pane-specification-id='1' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type-v2='color' w='9362' x='90170' y='16435'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7986' id='26' name='CO2 Per Year (2)' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='52315'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10301' id='27' mode='checkdropdown' name='CO2 Per Year (2)' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type-v2='filter' w='9362' x='90170' y='60301'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='25' is-fixed='true' name='CO2 Per Year (2)' w='22425' x='67745' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{60FCFF6B-9799-4A4C-812D-52C537B54CEA}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='National GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF9FF8B6-BC74-461C-AFE1-4509909B30A1}' />
    </window>
    <window class='worksheet' name='Total Greenhouse Gas Emissions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D39B5AD0-8FB4-44CC-A05B-837FF270C5EA}' />
    </window>
    <window class='worksheet' name='Percentage of People Unable to Afford a Healthy Diet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]</field>
            <field>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:year:qk]</field>
            <field>[federated.0zvkjn219k9npp12yzzcq19k60pw].[sum:Calculation_1408219367528824832:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{149EAD2F-C318-48D0-9ED0-9B26FFD1470E}' />
    </window>
    <window class='worksheet' name='North American Crop Production'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1txpi801ougt8s12r6ywb06c5102].[none:crop:nk]' type='filter' />
            <card param='[federated.1txpi801ougt8s12r6ywb06c5102].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1txpi801ougt8s12r6ywb06c5102].[none:crop:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1txpi801ougt8s12r6ywb06c5102].[none:country:nk]</field>
            <field>[federated.1txpi801ougt8s12r6ywb06c5102].[none:crop:nk]</field>
            <field>[federated.1txpi801ougt8s12r6ywb06c5102].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B68C7BC-2FF8-425D-8995-D676EF19B7A0}' />
    </window>
    <window class='worksheet' name='North American Precipitation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lmeh78147sge31cc3z7s0x934yw].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lmeh78147sge31cc3z7s0x934yw].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lmeh78147sge31cc3z7s0x934yw].[none:country:nk]</field>
            <field>[federated.1lmeh78147sge31cc3z7s0x934yw].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82ECA014-96C0-48F9-A461-23A2C6B4ACBA}' />
    </window>
    <window class='worksheet' name='Total People Unable to Afford a Healthy Diet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]</field>
            <field>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DC8CFC8-06CD-4FD7-8602-B8AF65DA156A}' />
    </window>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A841A78-2D64-4FD4-949E-AB62B1FE1553}' />
    </window>
    <window class='worksheet' name='CO2 Per GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A87327A3-4CE9-4F6F-ADB9-9440C7D9F716}' />
    </window>
    <window class='worksheet' name='CO2 Per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B04F8DB-A75E-4869-A0CC-6758541B653D}' />
    </window>
    <window class='worksheet' name='Percentage of People Unable to Afford a Healthy Diet (Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:country:nk]</field>
            <field>[federated.0zvkjn219k9npp12yzzcq19k60pw].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D080F04-1AF9-4EEF-AD5D-F9A039D3A462}' />
    </window>
    <window class='worksheet' name='Total People Unable to Afford a Healthy Diet (Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:country:nk]</field>
            <field>[federated.0lh4jj10vj6bfr1g4r60y1c35lam].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A50B0DDF-8F6B-4102-A363-54312267B7F2}' />
    </window>
    <window class='worksheet' name='CO2 Per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6455BD00-D151-4A89-A149-9D1361FD6980}' />
    </window>
    <window class='worksheet' name='CO2 Per Year (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A72E203-9313-40D0-B729-02AB13FD2D5F}' />
    </window>
    <window class='worksheet' name='CO2 Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E44D0D5B-92E4-4768-B20B-D45E0572C716}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='2023 CO2 Emssions'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='CO2 Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CO2 Per Year (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='National GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage of People Unable to Afford a Healthy Diet'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zvkjn219k9npp12yzzcq19k60pw].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9A14A98D-0865-44C5-9A4B-6AC5CCF4AC4C}' />
    </window>
    <window class='worksheet' name='2023 CO2 Emssions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:country:nk]</field>
            <field>[federated.0xxht900xbsdwg1f9dqd910u8x42].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65663457-227A-4AEB-BDA4-908EF4179565}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2023 CO2 Emssions' width='190'>
      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
      Cl+MpPDFSApfjKTwxUgKX4zk6P+yIM7kXVUe7SV8ab61hf0e6xNfjKTwxUgKX4yk8MVICl+M
      pPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgK
      X4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDF
      SApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjBQT7QVckPAH
      bHxkPZVZyyhbMqVn8BDPlWxgf5/LrixYzaPfSgOg/WMfG9bvpDZk4Z40nxX3zSbd6r7O9ley
      cd1m9vttXFfnsXTlArITLumOJMqGQPg29du30Tn7Nq483We4qRF/zv2ULb7hs08JH6L8hZPM
      WPUED48OUeNbT9nrE1jtHQc0sOuZ3zOqeA1PZbporvgN/7HpPVYvv4m4S7UliTrHH3XsP+9g
      i38uRZ7L+080+7HGpAz4nHB1Bf68QnJTh4M1kkxvARmHq6gHqN/HgXEFeDNHYjGc1NxC8tsO
      UB0e9K2Igzg8/AB7XznBzUU3cv5JJPxJgFFj0wZ8VksLZExIPjdgXU9Wmp+ADZz5hORrJ2D1
      TiaTNTGG5sDFX704l6OPOu2V5Xx0UzHLE4C2/nNtba3s31jSfcYfkcjfTL6D4ntmkm5BZ8cw
      XK6+V1tYVgOnmqCjowOXq/+hZpjVyOlGIL37cTAYHHA9bW1tA46L853/3jk3/PAhXq3OpnD5
      wN91puSvoiy/+2s73EzNW7/l6ddSeGxBBiNizxIK9b3axrbTSE2B2IZYQqEw9DnRn7VTGZN6
      7ur4+PjPvF4wGCQxMfGr70ui4vz3zrHhN+3ZTuXh41SWvNxvvGT/dJaVLWFKnzErbjRZ827j
      mrX1NJFBUhLU1gVgfM9xxz7G0QY3N1vAFaMIfFiHnZPdc9wJcPRIF6NvuzT7EmdwbPh9P9EB
      aNjBY2+M5dElU4AG3nr2Ta745h1MuSqB4Z9+wtFt2zkxcREpAFNzca8tp+KGe8kdHaLGt5Xa
      yYtYBDB+JtNefh5fzVV4M100V5SzK3Eaq3VLxyiODf/zpZH3nb+l/LlSXvifNjotF1fn/CMP
      LBzXPR03hcK7j7Nh7YO8GLJwT1/IysXjep+bv3QOG9f9mOV+G1fGXO5fpluZprksEolEor2I
      oSAYDA549jeRd1V5tJfwpfnWFvZ77PDbmSKDQ+GLkRS+GEnhi5EUvhhJ4YuRFL4YSeGLkRS+
      GEnhi5EUvhhJ4YuRFL4YSeGLkRS+GEnhi5EUvhhJ4YuRFL4YSeGLkRS+GEnhi5EUvhhJ4YuR
      FL4YSeGLkRS+GEnhi5EUvhhJ4YuRFL4YSeGLkRS+GEnhi5EUvhhJ4YuRFL4YSeGLkRS+GEnh
      i5EUvhhJ4YuRFL4YSeGLkRS+GEnhi5EUvhhJ4YuRFL4YSeGLkRS+GEnhi5EUvhhJ4YuRFL4Y
      KSbaC7gg4Q/Y+Mh6KrOWUbZkSs9gOx/7NrB+Zy0hy82k+Su4b3Y61l9mP/axYf1OakMW7knz
      WXHfbNJ7Jm1/JRvXbWa/38Z1dR5LVy4gOyEaG5NoGQKf+Db127fROfs2ruwzGj5UzgsnZ7Dq
      iTKeWlPM2H1lvH6id5LyF04yY9UTlD21huKx+yjrnWxg1zO/Z1TxGp4qe4JVs5vZtOk9wpd4
      VxJdjg/f/vMOtvjnUuS5vM9omOoKP3mFuaQOB2tkJt6CDA5X1XfPVlfgzyskt3uSTG8BGYer
      qAeo38eBcQV4M0diMZzU3ELy2w5QrfKN4vDwA+x95QQ3F91I/5NICy1kMCH53Ih1fRZp/gA2
      0NICGf0nyUrzE7CBM5+QfO2E3iMRJJM1MYbmwODuRJzF0Wf89spyPrqpmOUJQFvfmU46hrlw
      9R2yLKyGUzQBnR3DcPWfxLIaONUEHR0duFxx/V5nmNXI6UYgvftxMBgccD1tbW0Djovznf/e
      OTf88CFerc6mcPlA33WOIPZsiFDfIdvGTkslBWiKPUuo/yS2nUZqCsQ2xBIKhYFz8Z+1UxmT
      eu7q+Pj4z7xiMBgkMTHxK21Jouf8986x4Tft2U7l4eNUlrzcb7xk/3SWlRWRRC11ARjfc6Kx
      jx2lwX0zFpCUBLX9Jzna4OZmC7hiFIEP67BzsnuOOwGOHuli9G2Xbm8SfY4NPyV/FWX5fQYa
      dvDYG2N5tOd2ZjjXzdryCm64N5fRoRp8W2uZvGgRAHFTc3GvLafihnvJHR2ixreV2smLWAQw
      fibTXn4eX81VeDNdNFeUsytxGqvjPrME+RpzbPhfJG5KIXcf38DaB18kZLmZvnAli8f1TlJ4
      93E2rH2QF0MW7ukLWdk7mUb+0jlsXPdjlvttXBlzuX/ZTah7s1wWiUQi0V7EUBAMBgc8+5vI
      u6o82kv40nxrC/s9dvjtTJHBofDFSApfjKTwxUgKX4yk8MVICl+M9P/H6uJFjkBywgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CO2 Map' width='192'>
      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
      TuH/B3SJijL6raxgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 Per Capita' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5QkV33vvxU6TufuyXk278wGrcJGrXJACCQkgyRMsM0zxkfGPsbYD3Pg
      HQF+DweBsTH4+IGwQTwMCCEkkISy0CpszjOzE3ZS90ynmc49Harq3vdH7/ROb3fPdPd2T+r6
      /LNnqu6t369r61t1w+/+LkMppZCRqVLY5XZARmY5uSoBSJK04HlRFIu+JiEEhJCi65Viq5Q6
      S2lrpftHKV30GSiXrUrdixX5BZBbZauH1f5/tSIFICOzVMgCkKlqZAHIVDWyAGSqGlkAMlWN
      LACZqkYWgExVwxdaMOTzIkZ4cFIMrNoIi7Gmkn7JyCwJBQuAVaoQcU+jvtYCj88Hk14DQsiC
      EyGEkJJnGIudYCnFVqn+LZWtle7fUtqqlH8FC8A+chG62mYMDQ2huWMDGIYBy7Jg2YVbURzH
      Fe4tLj/8i123HLZKrbOUtla6f0tpqxL+FSyAro2bQcDAZuoGw/JgGAYA0v/mY7HzVzL35i+2
      3lLWWUpbK9m/tfB/VbAAVGpNScZlZFYy8iiQTFUjC0CmqpEFIFPVyAKQqWpkAchUNbIAZKoa
      WQAyVY0sAJmqRhaATFUjC0Cmqik4FCIWDSNJOHA0CV6tg1pZcFUZmRVLwU9xPJGAxzsDlmXB
      cH6s6+wApXTBJFaLnc9Xp9R6S1FnKW2tdP+W0lal/Cu4CRQK+GGtqwcYBqXF5MnIrDwK/gLo
      DQYIIkFjrRWcRg+GYdJrAvJBCCk6rn9OraXUW4o6S2lrpftHKV30GSiXrUrdi4IFYLHVF21c
      RmalI48CyVQ1sgBkqhpZADJVjSwAmapFIkQWgEz10j82LQtApjqJxpL48StnZQHIVB+EUPz7
      s8dx34FNsgBkqgtKKV44PASTTo09W1tkAchUF+dHPTg56MQn796RmsVebodkZJYKbyCKJ18+
      i0cfuAEKPpUusWABEEmCRCiEZBKiVHxUnozMcpJIivjur47j43fugNVwOcthwbFAMy4nRJUa
      0w47FDVGbFrfCWDxbTJL3UazlHpLVWcpba10/5bS1tX49/9eOYed6+vR01mbcZ2CBWCyWOGf
      jYBhmYyY/cXSo5fi7Px/C6UUW6XUWUpblfbv0NkJsAyD/dtaF6wjiARPvHAKf3D3jqyFUKvh
      Xnj8UUwHZ/HxO7dlbexdsACmZzyIiizqbFbwOgtYlgWldMHU06IogueLWzk2J6piU2GXYquU
      Oktpq5L+UUrxyvFRJEUJN+7oAICcdQiheOKFkzg15Ma9++LoaDBlXCNfvav1rxx15uoduTCF
      h27thkKRXb/gPkBjSzvWd7SirqkVFoO8O8xqx+WLwKhTo6PBhP5xb84ylFI8/94g1Eoet1/X
      hZng7BJ7efXMhGLoHfWird6Y87w8CrQA3kAUgigtXnAVcqRvEru3NOOuG9bj5WMjOcv0j0/j
      xKATn7hrB2xGLbyrUAA/fe087tmzIe8eAVUhAEppSSNXzxy6gKP9UxXwaHmhlOL0sAvXbmpE
      V5MJM6FZhKKJrHKHzk7g4Vt7oFRwqDNpMR1YXQIYcswgHBOwc31D3jJVIQCHN4Qv/MerRXes
      A+E4JjzBCnm1fEzNhFGjVkKvVYFjWRzc0Y7XT41llJEIwbg7gK4mMwDAbNDAF44tg7elEYjE
      8R/PncAfvW8nWDb/KvY1LwBBlPDE86cQiMQhiMV9BUKzCYy5AhXybPl477wDe7qb03/fuL0N
      R/unQMjlF4Q/HIexRg2lIjUYYapRIxCOL7mvpSCIBP/2y6N45LYe1Jm1C5Zd8wL49buD6O6s
      Q3dHLbyBaMH1CKFIihL84VjGg7HaIZTiSN8kdm1oTB/TqBToajLj/KgnfWxgYhqbWq3pv/Va
      JSLxZFnvRTSeRDBaXlFRSvHT185jY6sV125qWrT8mhbAqNOPM8Nu3HdgE+otOrj9hQtAIgQ8
      y4LnWCSE3Nts+sMxJJLFb925XBBC8dQbvdjaWQutWpFx7uCONrxxaizdTOwd86K7szZ9nmEY
      qBV83ntRii/feeYYvvKfv4O/jE2rI/2TcPkiePDgloLKr2kBPPfOID525zYoeQ61Ri2mrxjF
      OD7ozDo2h0QoOI5Fs80A50wkZ5n/eO4EfvjSmZJnKJcSQZTwX789jUAkgY/fuT1rVGRjiwXO
      mTBiSRGEUIy7gmityxw61KgUiCWyBRCIxPHE86fgCxX+IL9xahRWgxYfv2sHvvXUEcQSQmk/
      bB4T7iCee2cAf/LBa8FxhT3aa1YASVGCNxBFZ2OqE1dv0cHly3yQXz85hiH7TM76s3EBWhWP
      jgYjxnP0A2bjAsKzCTi8IYy7cneUD50dx4R7+TvRlFL88LdnUKNW4NMf2AU+z8Oxa2MjjvZN
      whOIQqdRZs36mvXqrLf18QEnvv7jt6HgWfzid30F+eMJRPHSsYt45LYeXLOhAbdc04F/++Wx
      q2pexRICvvebk/ije66BoUZVcL01K4AJdxC1Jm36P7vWpIV33jAeIRST3jBm8nx+/eEYzHoN
      WuuMsHtCWedPDjpx7aYmfPKuHfjJa+cgXTFVL0kEP3u9F6eGnGX8VaXhC8Vg94Tw0K09C+6Z
      e9OOdrx73o7eUS82t9uyzttMmV/RE4NOvHJ8BH/7sQP42B3b4ZyJwL7IqBmlFP/54hn8wd07
      082wm3a2w2JQ43Cfo6TfRwjF958/hZt3tmN9s6WoumtWAGcvujM6ejajFt5ANN1ciSUFBKPx
      vGPb/kgcBq0KzTY97N5sAbzba8e+nlasa7ZAr1Hh1JAr43zvmBc6jRKOHOJZat7rdeD6LYt3
      COstOsQFEa8ev4ieee3/OWwGLaaDl18Ypwad+Mgt3TDp1GBZBg8c3Iyn3lz4K2D3hMCxLLbM
      ExjDMLj/wGa8cHiopObkC0eGoFHxuGVXZ9F116wA+se96O6sS/89F/8995n1h+NotunyTu+H
      ZxMw6lSwGDQIzyYyJtLiSRHBSBz15lRIyMfu3Ian3+xHfF6H+PWTo3jktp6iOt6VgFCKE4NT
      uHF7W0Hlb9nZAZcvira67NABq1EDz6WRNEopRpwBtNUZ0ue7O+qQSIoYcsxgyDGDbz99FId7
      M9/qZ4Zd2L2lKetLZDFo0GDRoXcsd1hGPk4NuXBywIlP3rUDbAk7yRcsALd9Aq4ZHy70noVn
      ZvnbtQsRjQuIxgWYdOqM4xzLQrj0IE96Q9jUakUgxwwoAAQjCZh0mtToh5JHNJ5Mnzs56MTO
      9Y3p/0SzXoObdrbjyZfPAgAisSS8gVl0d9ZBJATxHB3HpWLCFYRGqYCxRr14YQC7u1vwh/fs
      hCpH+nuLQQv/pY5uLCGC5xgo+MuPEMsyePi2HvzzU4fx4pFh7N7ajN8eHU6/dCilOD7gxM71
      2Wk2GYbBB/ZtxK8OXQC59BUQRAkXxqfxzFv9+MbPD6N/fDqjzpgzgJ+8chaffXB3+gVXLEXk
      Bq1FYDaCyGwM0rQXNrO+oHBoUSzuP/9qwqHnbPWPebCu0QxCJMxvmlsMakwHImiw6ODwBNFa
      Z8DQpD+nj/5wDF2NJoiiiCarDpOeIGpaU7frSP8kHrqlO6Perde041tPH8Wxfgfc/ihu2NIE
      UAKbUQu3P4xGS03R96KU+3dlvUNnx3BgW+ui15mro+QY7Otuzlleq+QQmk1AFEWMTvnQaNFl
      +dhaq8fjn7k9PYH2+slRTLj9aKk1IBhNQJAk1KgVOa/fbNOBZRiMTM4gnhTxszf60GQzYEub
      Dfcf2IgfvXQW9+3fgF0bG3F62IVfHhrAox+6HnoNn/f3LXYPCw+HnnYjLDBob2kGUehWdDh0
      //g0rt/SnGW7zlSDmVAcLXUmTM1EsWN9PaQTY2BYFtwVGYQjMQFGvRo8z6O9wYxxTxhbO+tT
      b/dgDG0N5iwf/vjeXfjfTx6Cgufwt79/ADzPo7XOiKmZCJpt+iUPhxYlggG7D793c8+i1ynE
      llHPIZ4UwXIcLjoD6O6sB8uyWfXm/723uwXv9U7ikdstGLA7sWtDY846c9x/42Y8/tPDaG8w
      4dMfuA6tl5pYoiji8w/vxT/99F2cvuiByxfBXz+8D2a9Jud1Cv1dhYdDt3ZgY1c7ahtbUG8z
      LV5hmaCU4sLENNY1Zz+g9RYdPJfa5L5wDFaDFiadGoFIdjMoGI3DqE01GzoajHB4gpiNC/jO
      M0fxvt3rc9o26zV46NZudDWZodcq03XzDZNWmr4xL5ptBmhU5dnNh73UHIzFBYw6A+hoXPw5
      uHZTE86NeCBJBMcuTGJHjubPfLZ21OILHzuA//nR/emHfw6zXoMvfPQAWmoN+JtH9i/68BfC
      musE+8Nx8BwHrUqRda7WpIXnUohzLCFAp1XCotek27VzUEoRjafOA0CdWYchhw9f+9Fb2N/T
      hhu3tea1f/3mZvzxvbvS/YOWWiPGl2ku4J1zduzraSnrNTUqHsFoav6jpVa/aHmdRonmWj0G
      HT64/dF0cN1CdDSY8gawGWpUuGfPhrJt0bXmBNA35sX2dXU5x7tTQ6GzCEYTMOnUYABYc0Q5
      Spc6bXNzCCadClajFp+4azv2L/Dw58KiV+cMNa40EiEYdflzjudfDRa9BuPuAIw1qoJHXfZ1
      t+JHL51BW50xq6m53KwsbwrgaP8knl5gxvHsiBs7543/z8dq0MIfjsMbiKLu0hCmNUeIhCBK
      UMybLWUYBn/zyD5saa9dcCIpFyolD55jEYklFy9cRkadAbTXm6DKsQzwaqg11eBI32RBb/I5
      tnTUwuOP4tpNuf9flpNVJQBCUlm9jl2YyjlKRAjFyJQf7XmWv2nVCiQEEaPOAJptqfalzajN
      mgsQRJI1rFbsgz+fBqsObt/Szgcc6ZvEnq3NixcsklqTFicHndjQYl288CXUSh6f+8gebF+3
      8nYZWlUCGHcHoFUpQAjNGZTl9kdgM2rBLbAAQqXkMeL0o8mmA5BqAl35BQjHEqjRZPchSqWt
      zrjk6wrOXHRlTASWC4tBi2hcyPuSyUd3Z13Zv0blYNUIgFKKl49dxF03rMOmNhtGnP6sMmcv
      urF9Xf2Cb2u9Rolhhw+NllQHzmrUwheOZ3xRAuE4LGUYYZijvcEIx3S4bNdbDLsnBLNODZWi
      tMmhhbAaNGi06mAzLrzQZLWwagQQiSUx7gpiW1c9ejrr0Jdjyrx3zLvoZ7bWpEUwkkhHDCp4
      FqJEML9BFYjEs2aRr4bWWgMc3qUTwInBKeztbr2qZls+rEYN/uqhvQsuM1wtUEpXjwB+d3oc
      +3pawbIMNrdZ0TfmzXhrixKB2xdFS61hgauk5gJsJm16pnJuJGP+tUKzyaJCahejRq3MCKWo
      JIRSnB72FBT8Vgocy6ZDzFc7wqknV4cARJHg3V47Du5oBwAYdWrMxgUk56UssXtCaLTqFr1W
      rVGbEcDFMAy0KgWiscsLMnyhWFm/ADzPQqdWLslwaCAch1rJ55wHkbkMTUYgDr26OgRwuN+B
      dU2WjLdy8xXNinMjnkVnGQFg+7oGfPT2bRnHLAY1ZkKXO8KhaBx6bfm+AADQYNFhaqbyzaAB
      +zS2tNsq0vxZSwgDL4LrOrjyBSBKBM+/N4QP7t+Ycbynsw4DE6noQEopLthnsLVj8VEPBc/C
      ekUHrs5Uk7FYJhIT0qEM5aLBWgNnGTrC3kAUb5+dyHu+b8yLzW2FD1FWI5RSiP2/gaL7gcIF
      4HFMwOMPwu+exOCovWLOnR5247u/Op5u3hzpc2Bdkxm1psx0jFvabbgwMQ1KKd7rdUCSSDo+
      v1gsBk3GetZYQkCNurxNiBabHo4cC2uKQSIE3/vNSTz37kDO84RQjLmC6CwgRqeakSaPgzV3
      gNGYC48GNVtr4Y+G0T90EZzGANLeXJFw6JePXYReq8S/PnUYj37oejz79gA+95E9WdexGdVw
      zUTw4uFBnBp240/v21VyuLFJp8L5ES9EUQQFMJsQoOLZkkNsc9FgqcFLx0aKqnelnddPjsJq
      0CAQjiOZFLJGYgKROBQcC55lliX0eqXVyVcvefqn4K/7FCRJKlwAXq8LoSSwd/+NCAQDFQmH
      ngnOIp4Q8NcP78Uzhwbwxe+9ju7OOjRYcwddWQwanBudxucf2geOLT1Lca1Jh2DUAZ7nkRAk
      sAwDpTL/F6CUMGXLpTAMjuMKbp/Pt+PxR/Hm6Ql86ZMH8e2njyIQTabDOeYYngpgc7ttwXDj
      QmwVymrJDj2/HglNAckIlA1bARSxHqCprRNzA2tmU2WGwd45b8f1W1LT9w/etAV15hps78rf
      sf3LD++BgufAlvDGm4/VeDkgLp4UoanACArHsmAYBoRScCV0UP/7tfN45PYeaFUKNFpTGS6u
      FMD5EQ/2dpc3+nOtIZz7BRQ9D6T/XjGdYEIpTg4609GWDMPg4I52mPT5hyNVSr4sEzI1aiV8
      oRiGHT4EIvGyxc/Ph2FSk3ClxAQJogTnTBhbO1IL1Zty9CcIoRh1FRajX61QIQbRfgT8ulvS
      x1aMAEam/KhRK2Eo8/Bjofz+HdvxwpEhfPeZY1kLMcpFS60Bk9PFd4QnvWE02/TpUOImqx6T
      VwggEImDYxnUqMs7erWWEMfeBt96Axju8j1aMdFJ75yz4/brik9rUS52b23G7q3NFc0D2lyr
      x1QJQ6FDkzPomDf72lJrgOuKL8nwpK/onDjVBKUEYv+voTrwlxnHc34BpGQMZ04Xl+ruahBE
      Cb2jnvQnfjlhWaZicS7NNgMmS4gJGp70Z9wbjYrPCq3oHfOiewXcv5UKDdhBKQFryXzJ5hTA
      1IXz6B04j/GppVnK1zvqxfoWy4oMly0nzTY9nDPhojNeTHpDaJoX5qHgOfAci9l4KnyDUooR
      +QuwIELvM1B0fyjreA4BUCSoEtdcew306vKH0+binfMT2Ndd3FLD1YhKyUOQSHrJZSHEEgII
      oVlrYJtsejgv5Tp1+6JQK/myBvCtFYjrLOKv/x2k6UHw7fuyzucUgH10GCdP9aPGUPmYb1Ei
      GJnyY1OVTN9rlHxRmZDnsi9cOXfQbNOnQyuOXpjEtZuys61VM5RSJI7/ANKZn4Bffzs0H/xX
      MIrsNR45BMBg9623YlNnV9njYXLRO+rBxlZbyZm9VhuNNj2m8qRbz8XwpC9jo4o5mmsN6e2b
      5vb7krkMcZ6BNHEEijv+DnzbHjBs7uZ1TgEE7BcxK83i5JlRVDLzPaX0UuqOtd/8mSOVbbrw
      vtXwpC/n+ttmW2pEKRCJgwHWzAqtckATEcTf+ieob/sykOfBnyNnJ1ht0OP0uyfAKiq78YMo
      EQxN+jIyBa91mqy6godCKaXw+KNosGSvc6gzpyJYjw9MYdfGRrn5cwlKKRLvfhvKHQ+DNS4+
      K55TAKLAYEP3OliNZlTytvaNTWNzmy3vhg1rkQarHq4Cm0Ch2STUSh65nm2WYcAwwJFeB67b
      XJnVX6sRGvWAhqag2PKBgspnPXliIoK40oQ7btwH7bxZRc+kHdOBECZGhzE6MVkWZwft07hp
      Z3tZrrVaqLu0yUQh+xaPuYJY32zJ+XZnGAYWvQYz4diSNH9oovjh2+VAHD0ErvWGgstnNZAY
      lsNw32mM8hRd2w6kj5stNgRiMej1ekicBoSQqw6Hvm//xqxAtnJkh65knXLYqtEoEIrGFgz7
      SAoSXjo6jA/u35TXVkutHm31BlBCIM5Lg13+e0ER/9nHobz7H8Ba1hVRrxRbV1dHnDgCxe7P
      pMsWnR2aU2iw+7prwRrN0Mxrmng9TgQSBEhGYbA1gWUNKzY7dCXrlMNWS60RLt8sLIbcC3hE
      ieAHL57E5jYrujtzp3kEgA/s35SaFLvCl3LfC9F+FEiEQccPga/blD5+teHQlEgAaN4RmkL9
      S/sTDwKz0+CtXel7VlJ2aDEZwou/fh7OeWtYm9q7sHXjemzt2YGWBnnK/WpoqzdiNEdeIyAV
      FvLD355Gk02PD+7ftHCOI62qbEli80EphdD/a6hv/TKkyZN5v8ylNI+Ec08h8dY3yta0kqZO
      g2vcUdSAQE4BzAaCIEhgcolCIaqNzW1WDE/mFsDP3+hDS60BDxS4z22xUCJCmjoNyXkG0sxF
      UGnhSTkadoKGXeC6bgLDsKDhqawyJDqN2HN/Dsld2C6RAEClJMT+X4MEJ0C8uZd4Fosw8AIU
      W+8rqk6WACgRMep0AowO3fLoQkWoNdXA5Ytkvfm8gSh6Rz24tYTN3gqBUorE7/4JydM/gTDw
      IhKHvonk8R8sWEcYeAGKng+BYRhwHfshjh/OvGZoCrFnHwW/7mYkDj0OKha287vkOAG2vgfK
      6z6F5In/KvUnXfYjGQEJTYExFTenlCWAxKwXTq+IeHAGkejSRINWG+pLGaOj8cy375Mvn8VD
      t3ZXZFacUoLke98BWA7q9/0D1Dd/AZr3/T2ksbcvtcVz1JEEiBffBN9xEADAte6BNPHe5fNB
      OxIvfxHq274MRfcD4DsPInnyxwX5Iww8D0X3feCadoLG/CD+8av6fdLUafCNOwvqT8wnq7Sq
      ph7v/8DtoACUSjm4qlI0WnTwXtqQGgAG7TNIChK2VSiDsnD25yBhF9R3fCXdRmZUejCmNhBP
      P2DbnFGeUgpp/B1wtRvBqFITcay5AzTiBk1EACoh/tKXoL71f4GrS6WsUex4BLHnPgup62Zw
      tty76ACpIVUyMwLWuhEMw0J57SeQPPUk1Ld+qajfJDnPInnqSYASkIC96PpAji+AlJzFW6+/
      BqfPjcEL5Rnvl8mmtd6QzhhNKMV/v3Yev3/HtpK2+lwMEvVCHHgR6tu+DIbN/LootnwQwsCL
      meXDLsRf/hKE3l9BuffR9HGGYcA2bIPkOof4q49BsesTgKXr8nleBdWNn0P8ta9Acvfm7dyK
      I29CseFOMFzq/cu17gbxjUKauVj4b4r5kfjdP0J53aeguvGvoLnv22Abti1e8QqyBMCwLNZt
      3QHfxDDIGpmhJREvEseeWFETOe31Jky4U8saTww4UWvSLprXtFSEMz+DoucBMHz2F51r2glp
      6hRwqTMsTp5E/KUvQrH5/VC//xtgtZlxSHzbHsRf/hLYuq3g19+Wfb3azVDf/hUk3v4XJN/9
      Nmgyc+UapQRk8AXwm+5KH2NYHqrbvoz4q49B8vTn/hFEujxHRCQk3nocil2fAFe3GayhCaxu
      4azg+ch6wjmFFkZE4Y9TcOry5ccsF5TSoh5kyTeC2G/+EsL5XwIFdtCWgpZaAxzeEESJ4Jm3
      +vHhm7dWJJ6HxoOQ7EfBb7wr53mGV4Fr6IHkOAYSdiHx9jehvuNr4Nv3ZX0tAIBruQ7K6z8F
      5XV/mNcmZ+2C5kPfBaNvQOzZRxF/63FI7j4Ifc8h9uyfgbWsA6NryKxj7oDm7q8j/tpXITpO
      gNLUxB6lFOLEYSR++SnEfvWnEAZfhtD3KzC8GvyGO67izqTI6gNQSsCqNeAkghpd+XLklwvi
      PAPJ0w/lzkcWLSs5zyL+5tehvvPvIJz/BSRPP/jmXUvg5eIYalQIRRN497wdG1osWZnvyoXQ
      9xz4zfeA4fO/zBRb70f82PchnQxAffCvwRrz7yzDKLRQ7vwogIXH/hmWh3L7R6Dovh/SxGEk
      T/4IrHUd1Ld8EaSmIafYWWMLNPf+MxKHvonEO98C33UTaHASNBmB8n2Pg4MA4fwvQQITUN/+
      WFleGFkCEGIBDE1GcMOOLgx4gmi1rawwW3HkTUjOM1DseHjBGzAXFah5/zfBGhpB6ntA3L3A
      ChEAz7Ew6VT4+Ru9+D+fzm5KlAMqxCAOvwLN/f++YDm2dhMQmoJi+0PgGneU1QeGU4LvPAi+
      82D6GFkgNIHVN0Bzzz+CxgIQR94ELOugWHcLRFEEy/NQ7f+LsvqXJQCFxox6owv9jjh27cjf
      k18OKCWQnGdSU96UAEz+4ULi7gWjtYA1pBaKsLWbFx3zzrrG7AwYlQEMV5lU411NFmxstVUs
      FYww8CK49gNglAt/XRiWg+rBH4BTrpwvPqMxQdF9f8XtZAfDMQw6NmxFR8VNl0A8BHAKsPVb
      QWaGwdVuyls0tQh6XgYwSydoYAKUEjBMYZ375OF/B9e2B4r1t1+167l48KYtFRn1AS61nfue
      g/rebxRWgVNW5ZqCorJDu31+XOg9h4tjjkr6lBfJ3QuuvhtcfQ8k17m85WgikhJI0zXpYwzD
      ArwKEGbz1su4BqUgvlEQz4Wr9jsfPMdWLAULcZ4Ga2rNGsWRyaTo7NBaoxVUEsoSDp2LhcKh
      BftRcM3XgdHaIJz5Cdgtlz+R822Jg6+AbdsPCSwwzz5j7oLgHgB7qZ1LRAGpfNA5HkIigcT8
      oO4+cFf8hoJ/lxADOCXAcksfrn3mKfDbP1xw/WrKDj2fggUw7XUhJDDQKygUemtFskPPOZzr
      upRSJL39UFz/R4BCCyE4Do5j082ZdIgtpUgOvgD1nV8De4VtWr8F1DcEvvXaVJTjG18F07oH
      is33ZPlBkwmwWgtoIgSORcYUeyG/i0Q8iD3zGfDrb4Nq76NLGq4thNxAxAlF4w4wBe7MXi3Z
      oa+k4CZQY1snNq3rQFNbJ2otlZmwWQgaDwCUgFEbU51SlgcS2Xk2SWAcjNoARpcdUsDaNkJy
      n09dL2iH5BtH8uQPQRPZa3RJ2AVG3whGpQOd9RXpaxDxF/4Gqhs/B2nqNIh/rKj6V4tw/unU
      xFeBD381s2pSsRFPP7i6yyHCbN1WSN4B8K27M8pJjhPg2vbkHme2rgPxj6UCw878DPyOR8AK
      YSRP/RiqPX+aaS8wAdbUBmitIDPDYHULb78kefpBwi5AmIXQ9yyUuz8Nrm0vlAoNEu/8KxR3
      /8NV/PrCoVIytXBl94+WxN5qZ9W8IiTHMXAt16f/5hq3Q3KeySpHPH3g6rpzXoPh1WAYHjTo
      APH0g++6GYqtH4I0/l7q4Z0HDUyANbaArduyaLy65B1E4s2/B5kZBo35odr355Zl4QYAAA13
      SURBVODa9qZCiJt2AUotpPF3i//RJSBNnkrZLDIqslpZFQKglEJy94Gd92BzdVtTE1tXlCO+
      i2CtXVdeIg1r7kDive+kptFZHgzHQ7n700i8952MjnfqC9AOzrYR0nR+AVAiIvnut6E6+Hmo
      bvhjKK/5GLiGnssRlwwD1d5HIZ34wZLEIonDr4Bdd1tVDmmWwuoQQGgKYFgw2svJX1ljC+is
      H1Sct/euJABEArj8E0ts/RZI9qNQbLk3fYzvOAAaGAeSl9OVkLATjL4BjKkNNOTMGzMvDr0K
      xtAEboFIRFbfCEZtAo24C/m5JUPFOMj0MNj6noraWUusCgEkz/4Miu77s95qTI0to4NKfCNg
      LV0Lvv34jhuhuvFzYFSZ+46xDdvTcwuUiKDxEFitJRUQximAZHZHmSYiSJ56Esrdf7Lob2As
      XSDTg4uWuxok13mwDT1AgRN9MqtAADQWAJk8mbGtzRxc+z6IY4fSf0uevtQDsACsoSln0iS+
      9QZIjmOpP5KzGeEDrLkj54ql5Kknodz2e2C1BaQlt24AKSLevRTEoVdy3ieZ/Kx4AQh9z4Lf
      el/GtjZz8J0HIY6+lf6bePrA2fKHRyzE3EIPSilIdBrMvBlUrr4bkjfz7U2lJMSRN8Fven9h
      16/bAslT+KLxYqFiAmR6AFzD9orZWIusaAFQMQFh6GUoNuWOZWd1dakZ24gXAE0ts7NtKMkW
      qzGn+hDxIEhgPGMnEda2EcSbGRIhDr8GvutmMHxhGbRZfSNIyFmxjrDkOgu2bmvFAvfWKita
      AOLQy+Db94NR5Z9441uuhzT+DiCkFrvkygFfKGzdVkievvQQaPq4qR3EP3754aU0td1mjh1H
      8l/80v7AUnLxsgtAwk4Ivc9kHZebP6WxYgVAKYXQ9xwUPQ8uWI7rugnixddBgvbUxNVVwLVc
      B2nyRGoI1Hw5Zymj0oGpsUEceB4AQGaGwWjMOWeb88OArd0EMj1Usn+UECTe/hYSR78HEp2+
      fDweBJkeKnssfzVQpAAoJEmq6E6KaUtRD8AwYBaZgWXNHaDxECT7EbB1mxcsuxhcQw8kdy9I
      xA2mJjP7nfq2L0O48CKEi29A7H0aip4Hix5rZ2s3QbqKkSBp/G0wnBKq3Z+BcP7p9HGh71nw
      G+/M2U+SWZjiBEAJes+dwcDwaIXcuYw49CoUm9+/6EPGsBy49r2Qzv0cXN3Wq7LJ6upTWZCD
      k2A0mSM7jLIGmru/juSxJ0Dd54vKQDwHZ12fNXlXKDQ5i+TR70G577PgN9wJcfhVUEkAFWYh
      DL4ExZYPlnTdaqeo+XJKAfZSgFUlw6EpJRCGX4PqnscLqs923gx6/Aegxvai7OXyj63dAuLp
      T21kR664Fq+F6t5/gRT15j6/iC3Wsh7SzEhJIcrJo98Ht+leEHVKmNz6O5HofRaQkuA6b4bE
      qtKh3ysp3Hg56xRSr7iAEYaFzWqBosZS0XBoEnKDVRvA1xS27Se1rYfyli+B1xqLspXLP9q2
      GxJJ5vdbZwXUxtLCeZV6JCGBg5QzRUk+/yTfKOA+C+Xe76Zz6bDbHkDs2c8CRIT2we+D4YsL
      185nqxjWQjh0UVdkGAYNzVfX0SwEcfg18OsKXyjOsBy4je8ri22+62ZwFVw4z+jqQSOegnNY
      UkqRfOdfoNr7ZxltfEZjAde4DYzaBEa99OHpa4WVNwpECcSxt8F33rgs5hlOUdFlhKx1PaQF
      okspJSBRb/rtKo28CUZtTK9iS/vJMFDd+Hkor/8fFfO1GlhxAqCBcXCqGjAa03K7UhG4ui0L
      xgRJY29j9qcfQ+L1r4EExpE4+n+h3P/nubdJ4hTyxNdVsuIEIJz576JzvK8m2IZtkCYOg+aZ
      EBP6fwPNff8GfsMdEF7/KhTbPiwvbK8gyyoAyd0LGr+8rJGEXZBmLoJpP7BArdUNqzGD6zoI
      4exTWedI2AUaD4K1rgPftheqB54obrZZpmiWVQA0Oo34a19N54EUTv8Eiu0Pr/lwXuX2hyEM
      vAgay9wlRrjwGyg2vS8jb5G8sKWyLOuTxnUeBKOrh3DmZyARLyTvBfDrbl5Ol5YERqWDcsdD
      SBx7In2MEhHS2NtyPM8Ss6wCYBgGqgN/AXH4VSTe+kcoNt8LsNXRqeM33g0yPQhx/D1QKQlp
      6hRYcycYdXFzGTJXx7K3NRhOCfVtXwYoyZvCey3CcAqob38M4tDLmP3Fp5B46xtQbPu95Xar
      6mDoVQSoS5Ik7xNchjo0OQvJfQ5cyw0Zbf6V4l8+KE0FR1bNTLBMZWCU2qz8RjJLw7I3gWRk
      lpOiw6EH+s7BMyNvoC2zNiiy0UcQicZAZqZhM+uXPDv0QqykENvlrLNWba2McGiWQ2tzI4hC
      t+TZoRdjJXWslrPOUtqqunBogEFdU3Fb0cvIrGTkTrBMVSMLQKaqkQUgU9XIApCpamQByFQ1
      sgBkqhpZADJVjSwAmapGFoBMVSMLQKaqkQUgU9UULYCAZwpDY45K+CIjs+QUlx2aCOgfGgGn
      0YO0Ncnh0Cuwzlq1VSn/iloTTCkFIQSBYABWi1VeE7wC6yylrbWwJrioJhDDMOA4DlaLnKpP
      Zm0gd4JlqhpZADJVjSwAmapGFoBMVSMLQKaqkQUgU9XIApCpamQByFQ1sgBkqhpZADJVjSwA
      maqmyOzQFBOjwxizT1XIHRmZpaW4HWIoRcDnhcCoYDXpIUnSgrsYEkLAssVqLOVOsbsjlmKr
      lDpLaWul+7eUtirlX5HxpRSTU04Ya5vk7NCrOAS4XHWqLzs0w6J7246inZCRWanInWCZqkYW
      gExVIwtApqqRBSBT1cgCkKlqZAHIVDWyAGSqGlkAMlWNLACZqqbIQB2CvvNnMDQ6USF3ZGSW
      lqIEQClBjdEGBUMq5Y+MzJJSVCwQw3JQMSIUZlul/JGRWVKKC4eeByEEhJCKhENTSld1iO1y
      1lmrtlZIOPRlWJYtyKFiw5pLFUAptkqts5S2VrJ/c+/O1XwvKjoKVMpDDBS/GKZUW6X6t1S2
      Vrp/S2mrUv5xjz322GMlXTkP3qlJcBoN7KOj4JQaTE6MQqVWYnBwBAazFTyX/XBHQ35EYiJC
      PjeiSYp4aBqM2gDn+DAYlQ4qRY4PFZUwOemCWsVhZGwCGo0KM/4QqDCL8Uk3zGYzculo2jkF
      RqXC5PgoGIUKUxNjYBUKTIxNwGA2g2OzK4nJONxePxgpAYd7BhxJYtLthzgbxEwoDqNBl9s/
      hxNqjQIjI+NQKniMjtmhUnJwOL0wG405/ZtxOQGFElP2cYBTwDE2Bk6pwMjFUWgNZij57P9Q
      UYjD5fWBJUnYndMwmw2YdExCTEThiyRg0Glz+Ecw5ZiCSqvEyMgodAYzPK5JMFTEqH0KZrMF
      OW4FYpEQgpE4YiEf/NEkogEvQrMCwj43JEYFjUqRVUcSEnB5ZsBBxPiUBzwVYHdOgySi8Pqj
      MBn1ef1T16gwenEU2poajI2MQaXiMOFww2Qy5bx/8WgY/nAMiYgfM+E4SCIMfzCMSYcDKp0R
      KkXm16DsXwAlwyIWjyAQjmLwwhloDbVwXLyAKOGRT4xKjQ7x2TD8fj8mJiagVVCEE1GAN8Pn
      deexxIAhEiKRICKhINz+CEQhAb/PB5bjwSB310bFcmn/HI5JmExGOMbtaGwwwuWbzW2J4yGJ
      SQT8fvidExAUOjBUwoxvBjyf7/PKgKUE0UgI4UgYnkAIYiQIhzeIGiVFLCnl9o9XpPwLhWF3
      TELBAz7nJCICcooTAFiWBxEFBPx+BJ0TGLVPYSY8i/CsACEWyeMfwFGC2WgI4egsRkeGYHd6
      4ffNgLI8GCb3/VOoNEjGovD5fbBPTMDn84HjRIhUi6Dfm/tOsDyIlPIv5JrAiGsGHMen6i5w
      /3gqYXY2hFA0jpPHjiEmCHC5fTDVsAjHcu/6wqvUEOKz8Pn9cExMYHRsHIloCOG4mPP+lV0A
      Xq8Tbl8ERq0SFmsDXI4xqIwNqCEhBCJCzjohnxf2SSeMRjP0ej3cLjc83iAC0xNgFerchoiI
      qSkHYiILJc9DxVLYJybAq3UI+mYg5hmp9XpdcM2EYNSqoFXxuDA0CoOhBsMjDtRolDnrCPEo
      7PYJKDQ6cGo9vBNDiAkERqMJ3unpPP5JmJqaRFQA1DwHBcOAQAKVRLi8QfA53uQAMO11wekN
      wqjTQqdRYzYhIskooWPj8Idiuf1LzMJunwCvrgGr1oMRYwjOzCAZjyCayLM9EJEw5ZxEKEGh
      4RmwLAcxHgHhNYiFfIgLuQUQCfkw4XBAbzRDp9PDaDRiejqIsN8FwmS//QFATMZgt9vBqbRg
      VHo02YwI+KZRozdi2pvn/lEJTtcUAjECrYKiqbkVjBhDLJ6Ew+mDUplbONGQHxN2O3QGU8o/
      gwG+cBJ6BYEvGM0qX/IokIzMWkAOhZCpamQByFQ1Jc8DyMisVCgliM7GwYBCq63JOVo0hywA
      mTXJ8SPvQKk1wapTQGttgs8XgFnDQG2qR53FkC4nN4Fk1hwMw6LdzKF+3Qb87s33MDZyAe++
      dwT9F8dhNWfOOcijQDJrEiEeBVXUIOB2gNXokEgIMOq10NXUZJSTBSBT1fx/X5XtCQ7eNZQA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 Per GDP' width='192'>
      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
      0BSASVXz/wGhngzrBubWEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CO2 Per Year' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 Per Year (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      bVgvVqD/H6js9WPaO1M/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='National GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='North American Crop Production' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='North American Precipitation' width='192'>
      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
      ro6ScRVXqYvYbRiZwMQkH7IogM6F02dICFGIEfxMCowsCiBz9NjdWIWVsrL1fb7exGSrk3UK
      pCVVZCuEQqtHEjAxuZ3JUIB4eJKufj+NtY3UreOUlInJ7UAW/1CF0vIyysvLsVm3ZOhQE5MN
      I2MfwO6q5NChymxpTUzuOPI9YsRQfw/TgRk8gwPEEgkGBwbRNjl8ionJRpHlQMzyCC3J6TNn
      2dXeTFC34/f0UdPQjFDs1FaUrOpFuJWPza1FZjPzWqtMvkci1yKznvJthsx8F89Wp/wUQFcZ
      7OsjGosS0yScNiuxeILGth1UlRbdUSfCbmVeW8ELciWZQmqH/O4kKTS2tiMrCkLTkBVlrtOb
      DnMmtyd59VxJkha0b+6/+WqjiclWwrRzmhQ0pgKYFDSmApgUNKYCmBQ0pgKYFDSmApgUNKYC
      mBQ0pgKYFDSmApgUNKYCmBQ0eSvATGCS6UCYnuvXCM7McuP6DeKqGT7F5PYkT29QjcGhGyQD
      gqLWVqZ6u2hs3Ulch9oKt+kOvQVlTHfold2h8/Jk09U44XAMFQez/d2UltcwNDRIa8eulBu0
      6Q69dWRMd2iDDXOHVmwu9u69K6/MTUy2MuYi2KSgMRXApKAxFcCkoDEVwKSgMRXApKAxFcCk
      oDEVwKSgMRXApKAxFcCkoDEVwKSgMRXApKDJyxdI6Bp9PTdxlVYQmJykcls9k2NjtO3spMhu
      Rogzuf3Iyx0aYHSol3BolpKWTiZvXqCpvZOoqlFbUWq6Q29BGdMdeiPdofUE4UgSe2k5U33X
      qdzWzPDQIG07O0136C0oY7pDG2yYO7Qs2+jo7DT+aGoGoKF+W16FMTHZSpiLYJOCxlQAk4LG
      VACTgsZUAJOCxlQAk4LGVACTgsZUAJOCxlQAk4LGVACTgsZUAJOCJl+vIjRNRRcCTdMQqf/e
      otKZmNxi8nOHFoLhgT7iiQSRuI7TbiUWS9DYvoOq0qJbVUYTk1tG3k78imKlaVsp3oQV/3Av
      dQ3NJBJJNE1D13VW8q7WdR1VVfPKbzNl8vQMX1demyUjSRK6nnv4el3XV3Vr38jybYbM/HPN
      1g55KoBOLBZlRitHigbo3H+Q8dExGptrUGSjwUx36K0jY7pDG2yYO7QkW+jo3GP8UVkGQEtr
      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
      WGVTAUxM+P8Bh0yigoLGE8IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of People Unable to Afford a Healthy Diet' width='192'>
      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
      dqAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of People Unable to Afford a Healthy Diet (Line)' width='192'>
      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
      DcW5AAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWL0lEQVR4nO3da2xc6X3f8e+5zH04F15EiVqJunq10krrbJyNN1534yRrO3GAOAncIMm6
      cIoWaIC+6JsESYsg+yov8zJvAxQFCrSFa6BtGiNuHa+D2PFmV9HKWl0oSuJ1ODOc+33OOc+T
      F0NSK4vUzox4GfL8P4DA0ZB/zsOHz+/Mcw7PeY6htdYI4VPmQTdAiIO06wHwPO+Zn3ddd+Dv
      uV81SimUUnteA6PdD/vVd8O+1m7WyDvAxwwzG5QZ5OEmARC+JgEQvmb3+4Wriw9x7Si6VSGc
      mqK+niE9NUPbcQjRITA2TSIa2Mu2CrHr+g5AJBphrVjHadSJhEwCE2corDygYVtEVJ2ENU4s
      ZKKUeua8WCk18E7MftVstnuQnblhaja/flT7Yb/6btjX2s2aPgOgqdXqKE8zlohRbWsa6/dI
      jo2Ttlp0vDS2ZWJZFsDWx+24rott9527fa3xPA/DMDDN/meGw9QM275Rrtkc+IetH/r8Lgan
      z14Y6AWFOAxkJ1j4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoE
      QPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPha32tLrCzMk6u0sXWHcCRK
      tdZiLBqj5rnEVY2xmavMTEb3sq1C7Lq+1wUKhcOEWh6xWBJVyzIxc5bOeoZwQKNUCIPeGjmy
      MFZ/Rrkf/LQwltHfDTI0maUFjHACo1snkjpGZT1DevI4hu7iKoNgKEokZON5niyMtUftG+Wa
      I78w1olTZzYejwOQiJ3d+H9koIYIMUpkJ1j4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA
      +JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+Frfl9av
      Lj3EMSLodoVI+hi1/CqpqRk6jkOIDsHEcRLRwF62VYhd1+eyKNBq1ChU6pRyGY6Nx+nETtHJ
      zNOwLCKqTmL6CsfSIZRSGIax4/dRSg28dMZ+1Wx2xbPavxs1MNr9sF99N+xr7WZN3+8A83N3
      iU/MEB+LUXdM6kt3SSYmGLdadLxxbMvcWg9I1gXam/aNcs0RXxcIXv70ZwZ6QSEOA9kJFr4m
      ARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQ
      viYBEL4mARC+JgEQviYBEL4mARC+1vdF8ZtX/YPGMEy0UhimidZgoMEwBl4SQ4iDpLXuPwDZ
      1UXWKy0Mr0M4HKLa6BIPR6h5LjFVIzFzlZnJ6F62V4hds5Sr8F//34/7D4Bp2syePkWpVMKr
      50hPn6FbWCMc0CgVwqC3Ro5SimettaWUwnXdgRq7XzWb7X78brc3NZtfP6r9sF99N+xrPU/N
      /GqJb33/DrZt89U3Xtw+AOuP5vhwOcfVK59mKh0DoNtp01I1ojZEzrxMZT3D9PnzaN3FUwbB
      YFAWxtrj9o1yzSgvjKW1Zm65yP/+wRyup/nq5y/x4qlJTNPYPgB2wKDbeTJhp85eeOL/Y6fP
      bDwKD9R4IfaL1pr51RL/89072JbBb755mbMnUk/sq24bAKfjYJtd1sutrXcAIQ4LrTX5SpP/
      8u0PabQdvvaFy5yfSRHob2lETXx8HHsxy8R4fB+aK8TuqTU7fPPdO9xbKvBbv3CFq+eOYRjG
      jvsM2wZgZSmDNjStZguSMsURo8/zFN95/wF/e/0Rb/3MeX73ravY1ifvj2w7BXr40W2cqQlc
      t6+V04U4UDcfZPnv3/2IS7OT/Mk33iQa6v8+FdsEwOQzn3uNv/3RP2HaOx/NEeKglWot/vO3
      P6TrePz+Vz/D8fH4wH+MfSoAWivaHZdwLITTcXatsULslo7j8e33HvDujQW+9oUrvHrxBKY5
      3FkITwVAeV1W8iVSY2mSichzN1aI3dJ1PO4srvOt79/mxdNTvPN7P09kgOnOdp4KgGWHufzS
      BW7e/IBMvs70uBwGFQfLU4p3byzyN+/N8y9emeUPfvvniISCu/K9t90J9jotWl6QU1Nju/Ii
      QgxDa82tR3n+23dvce5Emj9++w3GoqGBT4N4lm0D0KxWcXC5/t4Njn/pdTlnWuwrrTU/fpjj
      f3zvNolIkH//668xlYruydnG2wYgHI2Cq7l87bIMfrFvtNb8+EGOb757m1gkyDe+/Apnjqf2
      9DT7bQNgWhaWZWH18YcEIZ6XUr2pzjffvU00HODrX3rlqXN29spTAXA7df7uvRtMz77I6WOy
      DyD2jlKaWw/z/K8fzBEJBfhXX7q251v8n/T0YVDVRXsWj+7dYubkDMflfCCxyxzX4/rcGt/+
      0X2S8TBf/9I1ZqdTB9KWvu8U3y/P8+R6gD1q3yjX9HM9gOsp3r2xwF//6D4vnZ7iK69fZHws
      dDhulC3EsGrNDn/z3gPeu7vKy2en+I9vf55UvHeS5W4e0hyGBEDsmeV8lb/64RyL2QpvXD3N
      n37jTcLB0Rpyo9Uaceg5rseth3n+zw/nMIAvvnaef/0rP9XXqckHQQIgdkWj7fCdf+xNc84e
      T/P2W1c5PZ0c+aVyJADiuXlK8Rffeo+XZnvz+3hkd87T2Q99ByCz/Ijg2BT5pfukp0+QXVkl
      mZqg6TlEVZPo1AWmUnL1mB9994NHTCWj/OrrFwc+GnbQ+g7A+MQEtZaLZQdoFjOkT1+ivXof
      xzJp6y5BV8m6QAMY5X4YpGa90uQ77z/gP739ua3f/yi175Nq+g5APrtGww0QDFiE4lM0svdJ
      TZ9kwmjT9ixiEVvWBdrj9o1ajeN6/OX/vcHXv3iNWCQEjOa6QM+q6fu7vHDm4pNPTE8N1ABx
      NGitWc7X+P6HC9y4n+WNa6e5fGbqme/6o0x2gkVfKvU2//DRCv9we4WAbfLGtdP8+ucvbV2R
      JQEQR06r43DzQY6/+3CRcqPNqxdP8O9+7aeZSh2dqwQlAOIJnqe4s1jg728tM7dU5PLZKX7j
      zZeYPQTH9IchARBorXmYKfO9GwvcnM9y4WSan/+ps/ybr7w69GoLh4UEwKd6O7NVfnBrmQ/n
      s0wkonzu6il+55dexjIY+CjLYeWPn1IAvdORl/NV3r+7yo35LKlYmM9eeYGvvH6RWPjxX28P
      +gzN/SQBOMKU0pRqbe6vlrn5IMuD1RLT6Rg/c+kkf/jbFw7VKQt7RQJwRGit6Tge+XKD+ZUS
      95YLPMyUCVgmL81O8sbV07z9xWsDrZvpBxKAQ0ZrjedpirUWC9kyS7kqy/kq2WIdMJhKRTl/
      cpw3Pz3L229dI2gbvpnPD0N6ZoQ5rkemWGcpW2EpX2UlXyVXamCZJumxCKeOJTg1neSnP3WC
      4+NxQttcbOKn+fwwJAAjoN11WV2v8WitzHKuymqhRrXRAQOOj8eZmRhjdjrJz10+ycxUEsuU
      W9LuFgnAPtu8fc+dhTx3FgusrtdwPcWJiTFOHUvwyoVpfvmzF0jGwgRs84mB7rruyF5ZdVhJ
      APaY1ppKo8O9pQIf3MuwlKsSjwT51AtpPnf1NLPTSWLhgGzRD4gEYA8opcmVG/zjnVU+fJCl
      2Xa4cmaKN1+Z5cyJFJFQYKhTesXuk9/ALvE8xUK2wvW5DP90P0vANnnt0kn+7a++eqROHjtq
      JADPwXE9bj7I8sG9Ne4tFZhOx/jslRf4o9+98MRfVsXokgAMqFRrcX1ujetza+TLDc7PpHn9
      ygv83i9/GlOOzhw6EoBP4HqK+ZUiNx/muH5vjWDA4tr5af7lF64wMxkHrYe6JFKMBgnANorV
      FrcX8rx/N0O21GB6PMZnXpzhrd85TyIafGIr73neAbZUPC/fB2DzHJpHa2Wu38vw0UKeoG1z
      6fQEX3n9IqeOJQkG5HaxR1XfAciuLhJJTlHMLBJOTVLNZUhNnqDtOoRpE0zOkIodjh0/11Pk
      Sg1uzGe5OZ+lWGtx9kSKq2eP8eWfvUB6TO6O6Rd9L4/eadWo1h06TgdVWcGYfpn26n0alkVE
      1UlMX+FYOoRS6pk7gkqpgefLu1GzXmly61Gejx6ts5itMJWK8vLZKS7PTvHCsQTw+MLuQXZk
      h6nZrn2Hveaw9kPfAVh6cJdq18ZWTSJjKSrFAsnkFJbVou3ZJNPHmUyGR+L+AFprMoUq95ZK
      3HyYY2GtTDIW5uq5Y7x87hjnTqS3vdRP1gUavqaf+wPs1msdyLpAp869+BNPnBqoAXvJU4ps
      scHthXVuPcyxWqgxFgly+ewxvvzaBc4cTxKwZR4vnnYod4K7jsfKeo3bC3nuLq6TLzeZSEZ5
      cWPH9eRUAtv0z3WtYniHYoS4niJXrnF9bo3bC3ny5SbHJ+JcOTPFb755meMTcYI/sYWX8+BF
      P0YyAFprqs0OtxfWef/uKsu5KuOJ3k7rb/3Cy8xMxrHkD09iF4xUAFxP8Vc/nOODexlcT3H1
      3DS/+Oo5zhxPEA4djkOs4nAZqQBorZlOx/gPX/vs1k3UQKYzYu+MVAACtsXPXn7hoJshfEQm
      0sLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC
      1wY+HbrdamJYAbRyCQSCKK0x0WDaWEf8psri6BksAFpx/949Zk5Os7xWJmya1JVHVNdInLjK
      iYneglKftNJKnyuxHEjNfr7WUarRG2ukjmr7dqoZKAAaiMYiZFaWiU/M0i3mCQcVSoUx6K0N
      s7k+zE4+aeGsUagZpG6Ymudt36jWwODrAh30zzTgFMggGg4zOXOGRinHzKcuorWDpyAQCG0t
      iPWshbG01s/8/EHWAEMtcjVMzSj3wzA1m4PrsPXDQAEwDIPjL8wCkIhuLowlF6uLw0uOAglf
      kwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIXxup5dGFeB7a7aCdFjhN
      dLcB3Qa6U0W3K3iNIp5TR7cr6G4D3SqB25UAiNGitQa3vTGQG+hWBd0qoVtldKeCbldRzSKO
      szHAPQe8DnhdMG2wwxjBGAQiGKEERmgMI5zEiE5gRc9jhJMQjGFE0hhmQAIg9o7WGjwHvC7a
      6/QGbLPY2wq3Shtb5gJuZ2Or3K1Dt9kbyMEohh3uDdRwsvcvksZMzWIE49iRVG8gW0GwQ2AF
      MczB708tARBbtFagNSgH7XqgFWiF9rrgdtFOsze92JxmdOq957oNVKcO3Vpv6uG00J3eY8O0
      egPUDGCE4r0BHUljRFIYY9NYExex4pMYwRhGIAahOIb57GHpui7mLt0CVwJwADYvzet93LhM
      T/P4MR97rFVvK6o8tNNG4YFSaOWA2wHlgXJ7g1Q5vYGqvN60wO3guR3U5hZ4c47sdcFp92qc
      Jtrtgtvs1RkGYPYGrmGAYfa2rlawt8UNRDACEQjENqYaYYz4Mcz0GcxQAiM81vua4FhvMBvP
      Ps7iui7WAd7PWQLwcVr1BpOzMaA8pzcf9dzeoPG6j5/3Omi3g3I6GF6nN/i8Ltppb3yu2/vo
      ObD53MZ0AOVuXUO7OdC1hicv2PtYGOwQGBbasDADvcdYAYyN53tz3yCGGQA7CIbV+5zV+7wR
      m8CwQr3nApHe1wUij/9vbX4MADtPF55l2EsiD9pIBUBrjW4WwG33tnheBzwH1W3havfxAHQ7
      4Llbn9+aY3oO2t2ocds4W1vCjc9vvsU/8VGhtbfRAgPDssEK9QaDFejtVJk2WMHeILN6b+fY
      wd4AMgNghzBCcbCCmHb48Vt+IPz4ox3aGKAhMG08z8Oy7I+NeqP374n/88R1rMMMzGFq/GS4
      nnGbXP/wLol4gprnElN14icuc2I88nytcRp0vv/nva2pFegNGCuANmx0ILwxCENbA8+wgxCI
      gh3CtIIbA7Y30DzDxgqEtraEhh3svZ1vvMVvPd76aG1dOD3IVszzvKGuCUZvhE0cqKF+A7rb
      ZPzkeTq5JWwbXMMENdwSJB9nBONEvvxnTz0/zFZMH/DcUhwOQ40QIzqBztxnevYMpm7TVSbh
      iFwcLw4fQw+7etRP0FqjlPrYzt32lFJDrR2zXzX7uS7QKPfDMMubAIeuH3ZtjmAYRt9rtQyz
      Xs9+1GwO5EF+icPUbBrVfhim5nmOAh3kz7Tvk+RhOmi/aoYZxMPUwGj3w3713bCvtZs11jvv
      vPPOwN9tAJ1WnUKljtuskis3UO0apXqXanGNRkczFnv6yJHyHFYyOUI2PFzMEAnZlKpNVKfB
      WrFKKhF/+oW0Zm15heBYlEf37xMIR1lfLxAJaO7OPSI5Pom1TR9USwVaLhRzK3SUSTG7SlcZ
      5FYXCUYTBO2ntxqPa5bpbtXA6uICVjhGOBh4qqbbarBeruO2q+RKdZxGhUKtRbtWpOUYxCKh
      p38k5bCymiMUgIeLqwRMxcJyFkN1WcmWGE8nd66xezWpVIrVlRUM1WVt/Vl9t0xwLMaj+XlC
      sQTVQhaF5v79hyTGJ7G36btauUCrqynlVml7FoW1JTrKJJ9Zwt6h77rtBvlSDa9TJ1uobfRH
      g2a1QLXtkohHd+i7Gl67TrZYw1RtcqUG7VqRpgOxSHibfnBZWckSDhg8WFwhFgnwaHEVdJfl
      bIGJjb7b879aWIEQbqdNqVQis7RIsdml26pRLBaxtukgAMMw0cqjWi7RKKxR6hg43SbFarP3
      h6YdBLWi3alTbnRYXsmglEurUqCjbUxj+12dcDROu1GlVCqytLhIMpWiVs4RiU2wns9/Qk2J
      xY2adr1Kpd7A3i5lgBkI4nZ7/bC2vAh2kEqlSNuxaFRLO/xEJtrzqJXL1Is5yh1Fu1Yhu17A
      3qHvoNd3tUqZejHLg8UlMoUKxUoT7T6r7zStToNyvc3D+Tmya6vkc3na2Fg79t0Yra1+eESx
      WMJzm4SiE6znctvWWHYQr9uhVCqRXVlgNV/Eti2KxQL2DoeFrUAQ92M19x4s4Hld2o5Js1re
      /gcyDLRyqVbK1It5Prh5B8fzKBSefJ09D0CrXmVxcYFoIkU0PgadBs2OQzKRYn19fdsa5XZZ
      Xl5CWSGMYATbabC4tILTbVGp7/RL1GRzGfKVNmMhg1g0wsrSEnUviN0tUW1521aV1rMsZXKk
      U2ni8Si3P7pLIBQlu7qAHXp6y9KrWduqGduoMYMhEpEw68XKtjXtxkY/jKUJx8botOo4jker
      XqSrtp8+aK/L8soSrhnECoSxvC6econGkuR36Dvt9fquVxPBUg6taplup0m53tqx73K5NfLl
      FomQSTAQoN1u09YBgt0yleYOfVfIsryaJZVOMRaPk0gmKZdr5DI79127UWNxcYFIPEU4mmAy
      nSS/nieZ3Hk8tDZrxno1E6kExVKZdr1Id/umgeuwsrKMawSwgiFOTk/SbVawQ3Hy6483bLt2
      FEiIw+hwnbghxC6TAAhfkwCII61er9Ntt+i629+4RU6WEUfa8tyPmc83uXbpHE3XxOpWiCYn
      qDY1l86flJ1gcbRpr8H//951moUFQhMnaRYyGCGbxPhlvvDGFQmAOOoUjUYbQ3UoN1ws3SUc
      i2PbEWLRoARA+Ns/A88/iWlu1DSgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Greenhouse Gas Emissions' width='192'>
      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
      zp20AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total People Unable to Afford a Healthy Diet' width='192'>
      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
      AEi0/wEI+ZciEiugawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total People Unable to Afford a Healthy Diet (Line)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
